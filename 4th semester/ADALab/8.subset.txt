#include<stdio.h>
#include<stdlib.h>
int x[20],m[20],i,s,n,solution_sum,elements_sum=0;
int sum=0;
void subset_sum(int s,int k,int r);
void main()
{	

	printf("enter the no of elements of a subset\n");
	scanf("%d",&n);
	printf("enter the elements\n");
	for(i=1;i<=n;i++)
		scanf("%d",&m[i]);
	printf("enter the required sum\n");
	scanf("%d",&solution_sum);
//	printf("finding sum of all the elements entered\n");
	for(i=1;i<=n;i++)
	{

		elements_sum+=m[i];
	}
//	printf("the sum of the elements entered is %d",elements_sum);

	
	if((m[1]>solution_sum) || (elements_sum<solution_sum))
	{
		printf("the solution does not exists\n");
	}
	else
	{
	
		for(i=1;i<=n;i++)
		{
			x[i]=-1;
		}
		subset_sum(0,1,elements_sum);                                                  	
        }

	printf("\n\n");
}
void subset_sum(int s,int k,int r)
{
	
	x[k]=1;
	
	if( (s+m[k]) == solution_sum)
	{
		printf("\n\nSubset found : \n");
		for(i=1;i<=k;i++)
		{
			if(x[i]==1)
			{
				printf("\t%d\t",m[i]);
			}
		}
	}
	//generating left child
	else if((s+m[k]+m[k+1])<=solution_sum)
		subset_sum(s+m[k],k+1,r-m[k]);

	if((s+r-m[k]>=solution_sum)&&(s+m[k+1]<=solution_sum))
	{
		x[k]=0;
		subset_sum(s,k+1,r-m[k]);
	}

}
